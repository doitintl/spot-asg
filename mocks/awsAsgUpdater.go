// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	autoscaling "github.com/aws/aws-sdk-go/service/autoscaling"

	context "context"

	mock "github.com/stretchr/testify/mock"

	request "github.com/aws/aws-sdk-go/aws/request"
)

// AwsAsgUpdater is an autogenerated mock type for the awsAsgUpdater type
type AwsAsgUpdater struct {
	mock.Mock
}

// UpdateAutoScalingGroupWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *AwsAsgUpdater) UpdateAutoScalingGroupWithContext(_a0 context.Context, _a1 *autoscaling.UpdateAutoScalingGroupInput, _a2 ...request.Option) (*autoscaling.UpdateAutoScalingGroupOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *autoscaling.UpdateAutoScalingGroupOutput
	if rf, ok := ret.Get(0).(func(context.Context, *autoscaling.UpdateAutoScalingGroupInput, ...request.Option) *autoscaling.UpdateAutoScalingGroupOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*autoscaling.UpdateAutoScalingGroupOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *autoscaling.UpdateAutoScalingGroupInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
